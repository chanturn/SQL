
/* setting the database to ZAGI */ set search_path to zagi; 

/* Query 5.1.2 */

SELECT 
	StoreID, StoreZip
FROM 
	STORE;  -- Query for the store ID and store zip code of all the store in the database


/* Query 5.1.3 */

SELECT 
 	CustomerName, CustomerZip
FROM 
	CUSTOMER 
ORDER BY 
	 CustomerName ASC; --Query to show Customer name and customer zip code sorted alphabetically by customer name


 /* Query 5.1.4 */

SELECT DISTINCT 
	RegionID 
FROM 
	STORE; --Query to display all the regions there are stores in

/* Query 5.1.5 */


SELECT * 
FROM 
	store
WHERE 
	regionid= 'C'; -- Query for stores in the Chicagoland region


/* Query 5.1.6 */


SELECT 
	CustomerID, CustomerName
FROM 
	CUSTOMER
WHERE 
	CustomerName LIKE 'T%'; --Query for all customers whose name starts with a T

/* Query 5.1.7 */

SELECT 
	ProductID, ProductName, ProductPrice 
FROM
	PRODUCT 
WHERE 
	ProductPrice >= '100'; --This is a query to display the products selling for $100 or more


/* Query 5.1.8 */

SELECT 
	p.ProductID, p.ProductName, p.ProductPrice, v.VendorName 
FROM 
	PRODUCT as p, vendor as v
Where 
  p.vendorID= v.vendorID; -- Join to display the all the Product ID, Product Price, Vendor Name, and Category Name 



/* Query 5.1.9*/

SELECT 
	p.ProductID, p.ProductName, p.ProductPrice, v.VendorName, c.CategoryName
FROM 
	PRODUCT as p, Vendor as v, Category as c
Where 
  p.vendorID= v.vendorID; --Join to display the all the Product ID, Product Price, Vendor Name, and Category Name 




/* Query 5.1.10 */

SELECT 
	ProductID, ProductName, ProductPrice
FROM 
	PRODUCT 
WHERE 
	CategoryID= 'CP'
GROUP BY 
	ProductID; -- This is a query that displays the category ID as camping because 'CP' is the categoryID for camping


/* Query 5.1.11 */

SELECT 
	p.ProductID, p.ProductName, p.ProductPrice 
FROM 
	PRODUCT as p, includes as i, salestransaction as s, store as t
Where 
	p.productID= i.productID
	AND
	i.TID= s.TID
	AND
	s.storeID= t.storeID
	AND
	t.storeZIP= '60600'; --This is a join statement to display the items sold in the area code '60600'
	
* Chandler Turner, HW4 */ 
/* setting the database to ZAGI */ set search_path to zagi; 


/* Query 5.1.12 */  

SELECT DISTINCT
	p.ProductID, p.ProductName, p.ProductPrice
FROM
	zagi.Product as p, zagi.vendor as v,  zagi.includes as i,zagi. salestransaction as s, zagi.store as t, zagi.region as r
WHERE
	p.vendorID=v.vendorID
	AND
	p.ProductID=i.ProductID
	AND
	i.TID= s.TID
	AND
	s.StoreID= t.storeID
	AND
	v.vendorName= 'Pacifica Gear'
	AND
	r.regionName = 'Tristate'
ORDER BY
p.ProductID; -- Query that displays the ProductID, ProductName, and ProductPrice for Products whose Vendor Name is Pacifica Gear that were sold in the region whose Region Name is Tristate. 


/* Query 5.1.13 */ 

SELECT 
	s.TID, c.CustomerName, s.TDate
FROM 
	zagi.salestransaction as s, zagi.customer as c, zagi.product as p,  zagi.includes as i
WHERE 
  p.ProductID= i.ProductID
  AND
  i.TID= s.TID
  AND
  s.CustomerID= c.CustomerID
  AND
  p.ProductName= 'Easy Boot';-- Query that shows the TID, CustomerName, and Transaction Date for sales transactions involving a customer buying East Boot


/* Query 5.1.14 */ 

SELECT 
	r.RegionID, r.RegionName, COUNT(*)
FROM 
	zagi.Region as r, zagi.Store as s
WHERE 
	r.RegionID= s.RegionID
GROUP BY
  r.RegionID; --Query to display the RegionID, Region Name, and number of stores in for all regions.

	

/* Query 5.1.15 */ For each product category, display the CategoryID, CategoryName, and average price of a product in the category.

SELECT 
	c.CategoryID, c.CategoryName, AVG(p.ProductPrice)
FROM 
	zagi.product p, zagi.category c
WHERE 
	p.CategoryID= c.CategoryID
GROUP BY
	c.CategoryID, c.CategoryName; --Query to show the CategoryID, CategoryName, and average price of a product in the category grouping by categoryID and category name




/* Query 5.1.16 */ 

SELECT 
	p.CategoryID, SUM(i.quantity)
FROM
	zagi.Product as p,zagi. includes as i
WHERE
	p.productID= i.ProductID
GROUP BY
	p.CategoryID; -- Query that displays the CategoryID and the total number of items purchased in the category grouping by categoryID.


/* Query 5.1.17 */ 
SELECT 
	r.RegionID, r.RegionName, SUM(p.ProductPrice*i.quantity) AmountSpent
FROM 
	zagi.Product as p, zagi.Region as r, zagi.includes as i, zagi.salestransaction as s, zagi. store as t
WHERE 
	p.ProductID= i.ProductID
	AND
	i.TID= s.TID
	AND
	s.StoreID= t.StoreID
	AND 
	t.RegionID= r.RegionID
GROUP BY
	r.RegionID, r.regionname; --This displays the RegionID, RegionName, and the total amount of sales (in dollars) in the region for all regions. Alo the total amount of sales as AmountSpent grouping by regionID and regionname.


/* Query 5.1.18 */ 

SELECT
	SUM(i.quantity), i.tid
FROM 
	zagi.includes as i
GROUP BY
i.tid
HAVING 
	SUM(i.quantity) > 5; -- This shows the TID and the total number of itemsf or all sales transactions whose totale sales is more than 5.



/* Query 5.1.19 */ 


SELECT
	v.vendorID, v.vendorname, SUM (p.productprice*i.quantity) TotalSales
FROM
	zagi.vendor as v, zagi.includes as i, zagi.product as p
WHERE
	v.vendorID= p.vendorID AND
	i.ProductID= p.ProductID
GROUP BY
	v.vendorID, v.vendorname
HAVING
	SUM (p.productprice*i.quantity) > 700; --Query shows the VendorID, VendorName, and total amount of sales in dollars whose total sales is more than 700.

/* Query 5.1.20 */ 
SELECT 
	p.ProductID, p.ProductName, p.ProductPrice
FROM 
	zagi.Product as p
WHERE p.productprice= (SELECT MIN(p.productprice) FROM zagi.product as p)
; -- This query displays the ProductID, ProductName, and ProductPrice for the cheapest product.



/* Query 5.1.21 */E5.1.21 

SELECT 
	p.ProductID, p.ProductName, v.VendorName
FROM 
	zagi.Product as p, zagi.Vendor as v
WHERE 
	p.VendorID= v.VendorID
	AND
  p.ProductPrice< (SELECT 
	AVG(p.ProductPrice)
	FROM 
	Product as p); --Show the ProductID, ProductName, and VendorName for products whose price is below the average price of all products.
 


/* Query 5.1.22  /* 

SELECT 
	p.ProductID, p.ProductName
FROM 
	zagi.Product as p
WHERE 
	(SELECT 
		COUNT(s.tid)
	FROM 	
		salestransaction as s
GROUP by  
  ProductID) >2; -Displays  the ProductID and ProductName of the product for the products whose total quantity sold in all transactions is greater than 2.

